{"version":3,"sources":["Components/Task.js","Components/Tasks.js","Components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Task","task","onDelete","onToggle","style","display","justifyContent","alignItems","className","onClick","id","type","checked","completed","onChange","marginLeft","marginRight","textDecoration","title","color","cursor","Tasks","tasks","map","index","AddTask","onAdd","useState","setTitle","setCompleted","onSubmit","e","preventDefault","alert","placeholder","value","target","App","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","console","log","addTask","length","userId","deleteTask","filter","taskCompleted","textAlign","fontSize","fontWeight","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e164308c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FaTimes } from 'react-icons/fa';\r\n\r\nfunction Task({ task, onDelete, onToggle }) {\r\n    \r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <div className='task' onClick={ () => {onToggle(task.id)}} style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center' }}>\r\n                <input type=\"checkbox\" checked={task.completed} id={task.id} onChange={() => {onToggle(task.id)}} />\r\n                <div style={{ marginLeft: '3vw', marginRight: '2vw'}}>\r\n                    <label>  \r\n                        {\r\n                            task.completed ?\r\n                            <p style={{ textDecoration: 'line-through' }}>{task.title}</p> :\r\n                            <p>{task.title}</p>\r\n                        }\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div className='del-btn' onClick={()=> (onDelete(task.id))}>\r\n                <FaTimes style={{color: 'grey', cursor: 'pointer'}} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n         {tasks.map((task, index)=>(\r\n             <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n         ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react';\r\n\r\nfunction AddTask({ onAdd }) {\r\n\r\n    const [title,setTitle] = useState('');\r\n    const [completed, setCompleted] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault(); // This prevents it from submitting it to a page.\r\n        if(!title) {\r\n            alert('Task field can\\'t be empty!');\r\n            return;\r\n        } \r\n        onAdd({ title, completed, });\r\n\r\n        setTitle('');\r\n        setCompleted(false);\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={ onSubmit }>\r\n            <div style={{display: 'flex', justifyContent: 'space-around', alignItems: 'center'}}>\r\n                <div className='form-control'>\r\n                    <input type='text' placeholder='Enter new Task' value={title} onChange={(e)=>setTitle(e.target.value)}></input>\r\n                </div>\r\n                \r\n                <input type='submit' value='Add Task' className='btn'/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import Tasks from './Components/Tasks';\nimport { useState, useEffect } from 'react';\nimport AddTask from './Components/AddTask';\nimport About from './Components/About';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nfunction App() {\n\n  const [tasks,setTasks] = useState([]);\n  \n  // useEffect function is used to show changes on the page if any changes occur \n  useEffect(()=>{\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    }\n    getTasks();\n  },[])\n\n  // This function fetches the default tasks from the url.\n  const fetchTasks = async () => {\n    const res = await fetch(`https://jsonplaceholder.typicode.com/users/1/todos`);\n    const data = await res.json();\n    console.log(data);\n    return data;\n  }\n\n  // A function to add task\n  const addTask = async (task) => {\n    task = {...task, id: tasks.length + 1, userId: 1};\n    console.log(task);\n    setTasks([...tasks,task])\n    console.log(tasks);\n  }\n\n  // A function to delete task\n  const deleteTask = async (id) => {\n    setTasks(tasks.filter((task)=>(task.id !== id)))\n  }\n\n\n  // Task completed\n  const taskCompleted = async (id) => { \n    setTasks(\n      tasks.map((task)=>\n        task.id === id ? {...task, completed: !task.completed} : task)\n    )\n    console.log(tasks);\n  }\n\n  return (\n      <div className='container'>\n        <p style={{ textAlign: 'center', fontSize: '2vw', fontWeight: 'bold' }}>{ 'THINGS TO DO:' }</p>\n        <hr/>\n        {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={taskCompleted} /> : 'You don\\'t have any tasks pending!'}\n        <hr />\n        <p style={{ textAlign: 'center', marginTop: '3vh', cursor:'pointer', fontWeight: 'bold' }}>DONE : {tasks.filter((task)=>(task.completed === true)).length}</p>\n        <AddTask onAdd={ addTask } />\n      </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}